/* -LICENSE-START-
 ** Copyright (c) 2020 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
 ** this license (the "Software") to use, reproduce, display, distribute,
 ** execute, and transmit the Software, and to prepare derivative works of the
 ** Software, and to permit third-parties to whom the Software is furnished to
 ** do so, all subject to the following:
 **
 ** The copyright notices in the Software and this entire statement, including
 ** the above license grant, this restriction and the following disclaimer,
 ** must be included in all copies of the Software, in whole or in part, and
 ** all derivative works of the Software, unless such copies or derivative
 ** works are solely in the form of machine-executable object code generated by
 ** a source language processor.
 **
 ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 ** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 ** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 ** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 ** DEALINGS IN THE SOFTWARE.
 ** -LICENSE-END-
 */

import Foundation

public typealias TransactionID = UInt32

public struct PTPTypes {
	
	public static let kUSBInterfaceClass: UInt16 = 0x06;
	public static let kUSBInterfaceSubClass: UInt16 = 0x01;
	
	public static let kInvalidSessionId = 0
	public static let kMaxPacketSize = 1024
	public static let kContainerHeaderSize = 12
	public static let kMaxPayloadSize = kMaxPacketSize - kContainerHeaderSize
	
	public static let kInvalidCaptureTransactionId: TransactionID = 0
	public static let kIndependentEventTransactionId: TransactionID	= 0xFFFFFFFF
	public static let kMaxCaptureTransactionId: TransactionID = 0xFFFFFFFE

	// Data types
	public typealias ptp_fixed_t = Int16

	public static func PTPFixedFromFloat(_ f: Float) -> ptp_fixed_t {
		return ptp_fixed_t(f * 2048.0)
	}

	public static func PTPFloatFromFixed(_ f: ptp_fixed_t) -> Float {
		return Float(f) / 2048.0
	}
}

// For general information about PTP datacodes, see PIMA 15470, 5.2.1.

// PIMA 15470, 10.3, Table 18
public typealias OperationCodeType = UInt16
public enum OperationCode: OperationCodeType
{
	case Undefined 					= 0x1000
	case GetDeviceInfo 				= 0x1001
	case OpenSession				= 0x1002
	case CloseSession				= 0x1003
	case GetStorageIDs				= 0x1004
	case GetStorageInfo				= 0x1005
	case GetNumObjects				= 0x1006
	case GetObjectHandles			= 0x1007
	case GetObjectInfo				= 0x1008
	case GetObject					= 0x1009
	case GetThumb					= 0x100A
	case DeleteObject				= 0x100B
	case SendObjectInfo				= 0x100C
	case SendObject					= 0x100D
	case InitiateCapture			= 0x100E
	case FormatStore				= 0x100F
	case ResetDevice				= 0x1010
	case SelfTest					= 0x1011
	case SetObjectProtection		= 0x1012
	case PowerDown					= 0x1013
	case GetDevicePropDesc			= 0x1014
	case GetDevicePropValue			= 0x1015
	case SetDevicePropValue			= 0x1016
	case ResetDevicePropValue		= 0x1017
	case TerminateOpenCapture		= 0x1018
	case MoveObject					= 0x1019
	case CopyObject					= 0x101A
	case GetPartialObject			= 0x101B
	case InitiateOpenCapture		= 0x101C
	
	// Operation Codes 0x101D - 0x8FFF are reserved.
	case VendorExtendedStart		= 0x9000
	case CheckEvent					= 0x9001
	case StartRecord				= 0x9010
	case StopRecord					= 0x9011
	case StillCapture				= 0x9012
	case ChangeFocus				= 0x9013	// 0x1 (Inf -> Closest), 0x2 (Closest -> Inf)
	case InitiateAutoFocus			= 0x9014
	case TerminateAutoFocus			= 0x9015
	case EnableAutoExposure			= 0x9016
	case DisableAutoExposure		= 0x9017
	case EnableAutoWhiteBalance		= 0x9018
	case DisableAutoWhiteBalance	= 0x9019
}

// PIMA 15470, 11.2, Table 20
public typealias ResponseCodeType = UInt16
public enum ResponseCode: ResponseCodeType
{
	case Undefined									= 0x2000
	case OK											= 0x2001
	case GeneralError								= 0x2002
	case SessionNotOpen								= 0x2003
	case InvalidTransactionID						= 0x2004
	case OperationNotSupported						= 0x2005
	case ParameterNotSupported						= 0x2006
	case IncompleteTransfer							= 0x2007
	case InvalidStorageID							= 0x2008
	case InvalidObjectHandle						= 0x2009
	case DevicePropNotSupported						= 0x200A
	case InvalidObjectFormatCode					= 0x200B
	case StoreFull									= 0x200C
	case ObjectWriteProtected						= 0x200D
	case StoreReadOnly								= 0x200E
	case AccessDenied								= 0x200F
	case NoThumbnailPresent							= 0x2010
	case SelfTestFailed								= 0x2011
	case PartialDeletion							= 0x2012
	case StoreNotAvailable							= 0x2013
	case SpecificationByFormatUnsupported			= 0x2014
	case NoValidObjectInfo							= 0x2015
	case InvalidCodeFormat							= 0x2016
	case UnknownVendorCode							= 0x2017
	case CaptureAlreadyTerminated					= 0x2018
	case DeviceBusy									= 0x2019
	case InvalidParentObject						= 0x201A
	case InvalidDevicePropFormat					= 0x201B
	case InvalidDevicePropValue						= 0x201C
	case InvalidParameter							= 0x201D
	case SessionAlreadyOpen							= 0x201E
	case TransactionCancelled						= 0x201F
	case SpecificationOfDestinationUnsupported		= 0x2020
	
	// Response Codes 0x2021 - 0x9FFF are reserved.
	case VendorExtendedStart						= 0xA000
}

// PIMA 15470, 6.2, Table 14
public typealias ObjectFormatCodeType = UInt16
public enum ObjectFormatCode: ObjectFormatCodeType
{
	case Unspecified			= 0x0000
	case UndefinedNonImage		= 0x3000 // Undefined non-image object
	case Association			= 0x3001 // Association (e.g. folder)
	case Script					= 0x3002 // Device-model-specific script
	case Executable				= 0x3003 // Device-model-specific binary executable
	case Text					= 0x3004 // Text file
	case HTML					= 0x3005 // HyperText Markup Language file (text)
	case DPOF					= 0x3006 // Digital Print Order Format file (text)
	case AIFF					= 0x3007 // Audio clip
	case WAV					= 0x3008 // Audio clip
	case MP3					= 0x3009 // Audio clip
	case AVI					= 0x300A // Video clip
	case MPEG					= 0x300B // Video clip
	case ASF					= 0x300C // Microsoft Advanced Streaming Format (video)
	case UndefinedImage			= 0x3800 // Unknown image object
	case JPEG					= 0x3801 // Exchangeable File Format, JEIDA standard
	case EP						= 0x3802 // Tag Image File Format for Electronic Photography
	case FlashPix				= 0x3803 // Structured Storage Image Format
	case BMP					= 0x3804 // Microsoft Windows Bitmap file
	case CIFF					= 0x3805 // Canon Camera Image File Format
	case Reserved1				= 0x3806 // Reserved
	case GIF					= 0x3807 // Graphics Interchange Format
	case JFIF					= 0x3808 // JPEG File Interchange Format
	case PCD					= 0x3809 // PhotoCD Image Pac
	case PICT					= 0x380A // Quickdraw Image Format
	case PNG					= 0x380B // Portable Network Graphics
	case Reserved2				= 0x380C // Reserved
	case TIFF					= 0x380D // Tag Image File Format
	case IT						= 0x380E // Tag Image File Format for Information Technology (graphic arts)
	case JP2					= 0x380F // JPEG2000 Baseline File Format
	case JPX					= 0x3810 // JPEG2000 Extended File Format
	
	// Event Codes 0x3811 - 0xB000 are reserved.
	case VendorExtendedStart	= 0xB000
}

// PIMA 15470, 12.4, Table 22.
public typealias EventCodeType = UInt16
public enum EventCode: EventCodeType
{
	case Undefined				= 0x4000
	case CancelTransaction		= 0x4001
	case ObjectAdded			= 0x4002
	case ObjectRemoved			= 0x4003
	case StoreAdded				= 0x4004
	case StoreRemoved			= 0x4005
	case DevicePropChanged		= 0x4006
	case ObjectInfoChanged		= 0x4007
	case DeviceInfoChanged		= 0x4008
	case RequestObjectTransfer	= 0x4009
	case StoreFull				= 0x400A
	case DeviceReset			= 0x400B
	case StorageInfoChanged		= 0x400C
	case CaptureComplete		= 0x400D
	case UnreportedStatus		= 0x400E
	
	// Event Codes 0x400F - 0xBFFF are reserved.
	case VendorExtendedStart	= 0xC000
	case DevicePropDescChanged	= 0xC001
}

// PIMA 15470, 13.3.5, Table 26.
public typealias DevicePropCodeType = UInt16
public enum DevicePropCode: DevicePropCodeType
{
	case Undefined					= 0x5000
	case BatteryLevel				= 0x5001
	case FunctionalMode				= 0x5002
	case ImageSize					= 0x5003
	case CompressionSetting			= 0x5004
	case WhiteBalance				= 0x5005
	case RGBGain					= 0x5006
	case FNumber					= 0x5007
	case FocalLength				= 0x5008
	case FocusDistance				= 0x5009
	case FocusMode					= 0x500A
	case ExposureMeteringMode		= 0x500B
	case FlashMode					= 0x500C
	case ExposureTime				= 0x500D
	case ExposureProgramMode		= 0x500E
	case ExposureIndex				= 0x500F
	case ExposureBiasCompensation	= 0x5010
	case DateTime					= 0x5011
	case CaptureDelay				= 0x5012
	case StillCaptureMode			= 0x5013
	case Contrast					= 0x5014
	case Sharpness					= 0x5015
	case DigitalZoom				= 0x5016
	case EffectMode					= 0x5017
	case BurstNumber				= 0x5018
	case BurstInterval				= 0x5019
	case TimelapseNumber			= 0x501A
	case TimelapseInterval			= 0x501B
	case FocusMeteringMode			= 0x501C
	case UploadURL					= 0x501D
	case Artist						= 0x501E
	case CopyrightInfo				= 0x501F
	
	// DeviceProp Codes 0x5020 - 0xCFFF are reserved.
	case VendorExtendedStart		= 0xD000
	case BMD_ShutterSpeed			= 0xD001
	case BMD_ShutterAngle			= 0xD002
	case BMD_FocusPosition			= 0xD003
	case BMD_WhiteBalanceKelvin		= 0xD004
	case BMD_WhiteBalanceTint		= 0xD005
	case BMD_FrameRate				= 0xD006
	case BMD_OffSpeedFrameRate		= 0xD007
	case BMD_OffSpeedEnabled		= 0xD008
	case BMD_ZoomPosition			= 0xD009
	case BMD_RecordingState			= 0xD00A
	case BMD_NDFilter				= 0xD00B
}

// PIMA 15470, 5.3, Table 3.
public typealias DataTypeCodeType = UInt16
public enum DataTypeCode: DataTypeCodeType
{
	case Undefined		= 0x0000
	
	// n-bit integers
	case Int8			= 0x0001
	case UInt8			= 0x0002
	case Int16			= 0x0003
	case UInt16			= 0x0004
	case Int32			= 0x0005
	case UInt32			= 0x0006
	case Int64			= 0x0007
	case UInt64			= 0x0008
	case Int128			= 0x0009
	case UInt128		= 0x000A
	
	// Arrays of n-bit integers
	case Int8_Array		= 0x4001
	case UInt8_Array	= 0x4002
	case Int16_Array	= 0x4003
	case UInt16_Array	= 0x4004
	case Int32_Array	= 0x4005
	case UInt32_Array	= 0x4006
	case Int64_Array	= 0x4007
	case UInt64_Array	= 0x4008
	case Int128_Array	= 0x4009
	case UInt128_Array	= 0x400A
	
	// Variable-length UCS2 String
	case String			= 0xFFFF
}

// PIMA 15470, 13.3.3, Table 23.
public typealias DevicePropPermissionsType = UInt8
public enum DevicePropPermissions: DevicePropPermissionsType
{
	case ReadOnly		= 0x00
	case ReadWrite 		= 0x01
};

// PIMA 15470, 13.3.3, Table 23.
public typealias DevicePropFormType = UInt8
public enum DevicePropForm: DevicePropFormType
{
	case None			= 0x00
	case Range 			= 0x01
	case Enum 			= 0x02
};
